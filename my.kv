#:import Factory kivy.factory.Factory

WindowManager:
    MainWindow:
    CreateEvent:

<PeopleScroll>:
    viewclass: "Button"
    RecycleBoxLayout:
        default_size: None, 100
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'

<MainWindow>:
    on_pre_enter: self.refresh_event_scroll()
    size: root.width, root.height
    name: "main"
    GridLayout:
        cols: 1
        size: root.width, root.height
        Label:
            size_hint: 1, .1
            text: "EVENTS"
        Button: 
            size_hint: .5, .1
            text: "Select Event Filters v"
            on_release: 
                root.manager.transition.direction = "up"
                root.go_event_filters()
        Label:
            size_hint: 1, .1
            text: "Showing Results"
        RecycleView:
            viewclass: "Button"
            id: event_scroll
            RecycleBoxLayout:
                spacing: 30
                #default_size: None, 100
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
        GridLayout:
            cols: 4
            size_hint: 1, .1
            Button: 
                text: "Add An Event"
                on_release: 
                    root.manager.transition.direction = "left"
                    root.go_create_event()
            Button: 
                text: "Message"
                on_release: 
                    root.manager.transition.direction = "left"
                    root.go_message()
            Button: 
                text: "Profile"
                on_release: 
                    root.manager.transition.direction = "left"
                    root.go_profile()

<CreateEvent>
    name: "create_event"
    GridLayout:
        cols: 1
        size: root.width, root.height

        GridLayout:
            cols: 2
            Button:
                size_hint: .2, 1
                text: "<"
                on_release: 
                    root.manager.transition.direction = "right"
                    root.go_back()
            Label:
                text: "CREATE A NEW EVENT"
        Label:
            id: error
            text: ""
            color: 1, 0, 0, 1
        Label:
            text: "Event Name"
        TextInput:
            id: event_name
            multiline: False
        Label:
            text: "Event Organizer"
        TextInput:
            id: event_organizer
            multiline: False
        Label:
            text: "Event Location"
        TextInput:
            id: event_location
            multiline: False
        Label:
            text: "Start time"
        GridLayout:
            size_hint: .5, 1
            cols: 4
            Spinner:
                id: s_hour_select
                text: "00"
                values: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]
            Label:
                text: ":"
            Spinner:
                id: s_minute_select
                text: "00"
                values: ["00", "15", "30", "45"]
            GridLayout:
                cols: 2
                Label: 
                    text: "AM"
                CheckBox: 
                    id: s_am
                    group: "s_am_pm"
                    on_active: root.s_am_pm_clicked(self, self.active, "AM")
                    color: (255, 255, 255, 1)
                Label: 
                    text: "PM"
                CheckBox: 
                    id: s_pm
                    group: "s_am_pm"
                    on_active: root.s_am_pm_clicked(self, self.active, "PM")
                    color: (255, 255, 255, 1)
        Label:
            text: "End time"
        GridLayout:
            size_hint: .5, 1
            cols: 4
            Spinner:
                id: e_hour_select
                text: "00"
                values: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]
                
            Label:
                text: ":"
            Spinner:
                id: e_minute_select
                text: "00"
                values: ["00", "15", "30", "45"]
            GridLayout:
                cols: 2
                Label: 
                    text: "AM"
                CheckBox: 
                    id: e_am
                    group: "e_am_pm"
                    on_active: root.e_am_pm_clicked(self, self.active, "AM")
                    color: (255, 255, 255, 1)
                Label: 
                    text: "PM"
                CheckBox: 
                    id: e_pm
                    group: "e_am_pm"
                    on_active: root.e_am_pm_clicked(self, self.active, "PM")
                    color: (255, 255, 255, 1)
            
        Label: 
            text: "Date"
        GridLayout: 
            cols: 3
            Spinner:
                id: month_select
                text: "Month"
                values: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
            Spinner:
                id: day_select
                text: "Day"
                values: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"]
            Spinner:
                id: year_select
                text: "Year"
                values: ["2024", "2025"]
        Label:
            text: "Type of Event"

        Label: 
            text: "Athletic   Show    Workshop   Social    Club   Professional"
        GridLayout:
            cols: 6
            CheckBox: 
                id: cat_at
                on_active: root.category_clicked(self, self.active, " Athletics")
                color: (255, 255, 255, 1)
            CheckBox: 
                id: cat_sh
                on_active: root.category_clicked(self, self.active, " Shows")
                color: (255, 255, 255, 1)
            CheckBox: 
                id: cat_wo
                on_active: root.category_clicked(self, self.active, " Workshops")
                color: (255, 255, 255, 1)
            CheckBox: 
                id: cat_so
                on_active: root.category_clicked(self, self.active, " Social")
                color: (255, 255, 255, 1)
            CheckBox: 
                id: cat_cl
                on_active: root.category_clicked(self, self.active, " Clubs")
                color: (255, 255, 255, 1)
            CheckBox: 
                id: cat_pr
                on_active: root.category_clicked(self, self.active, " Professional")
                color: (255, 255, 255, 1)
        Label:
            text: "Description"
        TextInput:
            id: description
            multiline: True   
        Button:
            text: "Create event"
            on_release: 
                root.manager.transition.direction = "right"
                root.on_submit()

<EventFilter>
    name: "event_filters"
    GridLayout:
        cols: 1
        size: root.width, root.height

        Button:
            text: "Select Event Filters ^"
            on_release: 
                root.manager.transition.direction = "down"
                root.go_back()
        
        Label:
            text: "Dates"

        GridLayout:
            cols: 3

            
            GridLayout: 
                cols: 3
                Spinner:
                    id: month_select
                    text: "Month"
                    values: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                    on_text: root.month_clicked(month_select.text)
                Spinner:
                    id: day_select
                    text: "Day"
                    values: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"]
                    on_text: root.day_clicked(day_select.text)
                Spinner:
                    id: year_select
                    text: "Year"
                    values: ["2024", "2025"]
                    on_text: root.year_clicked(year_select.text)

            Label:
                text: "to"
            
            GridLayout: 
                cols: 3
                Spinner:
                    id: month_select
                    text: "Month"
                    values: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                    on_text: root.month_clicked(month_select.text)
                Spinner:
                    id: day_select
                    text: "Day"
                    values: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"]
                    on_text: root.day_clicked(day_select.text)
                Spinner:
                    id: year_select
                    text: "Year"
                    values: ["2024", "2025"]
                    on_text: root.year_clicked(year_select.text)

        Label:
            text: "Times"
        GridLayout:
            size_hint: .5, 1
            cols: 4
            Spinner:
                id: s_hour_select
                text: "00"
                values: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]
                on_text: root.s_hour_clicked(s_hour_select.text)
            Label:
                text: ":"
            Spinner:
                id: s_minute_select
                text: "00"
                values: ["00", "15", "30", "45"]
                on_text: root.s_minute_clicked(s_minute_select.text)
            GridLayout:
                cols: 2
                Label: 
                    text: "AM"
                CheckBox: 
                    group: "s_am_pm"
                    on_active: root.am_pm_clicked(self, self.active, "AM")
                    color: (255, 255, 255, 1)
                Label: 
                    text: "PM"
                CheckBox: 
                    group: "s_am_pm"
                    on_active: root.am_pm_clicked(self, self.active, "PM")
                    color: (255, 255, 255, 1)
        
        GridLayout:
            size_hint: .5, 1
            cols: 4
            Spinner:
                id: e_hour_select
                text: "00"
                values: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]
                on_text: root.e_hour_clicked(e_hour_select.text)
            Label:
                text: ":"
            Spinner:
                id: e_minute_select
                text: "00"
                values: ["00", "15", "30", "45"]
                on_text: root.e_minute_clicked(e_minute_select.text)
            GridLayout:
                cols: 2
                Label: 
                    text: "AM"
                CheckBox: 
                    group: "e_am_pm"
                    on_active: root.am_pm_clicked(self, self.active, "AM")
                    color: (255, 255, 255, 1)
                Label: 
                    text: "PM"
                CheckBox: 
                    group: "e_am_pm"
                    on_active: root.am_pm_clicked(self, self.active, "PM")
                    color: (255, 255, 255, 1)
                 
         
        Label:
            text: "Filer By Event Popularity"
        GridLayout:
            size_hint: .5, 1
            cols: 3
            Label:
                text: "most popular first"
            Switch:
                active: True
                on_active: root.switch_callback(self, self.active)
            Label:
                text: "least popular first"

        Label:
            text: "Types"  

        GridLayout:
            cols: 2

            Label:
                text: "Athletics" 

            CheckBox:
                on_active: root.checkbox_click(self, self.active)
                size_hint_x: .20
                canvas.before:
                    Color:
                        rgba: 1, 1, 1, 1  # Set the color to white with full opacity
                    Line:
                        width: 2  # Thickness of the outline
                        rectangle: self.x, self.y, self.width, self.height
        GridLayout:
            cols: 2

            Label:
                text: "Shows" 

            CheckBox:
                on_active: root.checkbox_click(self, self.active)
                size_hint_x: .20
                canvas.before:
                    Color:
                        rgba: 1, 1, 1, 1  # Set the color to white with full opacity
                    Line:
                        width: 2  # Thickness of the outline
                        rectangle: self.x, self.y, self.width, self.height

        GridLayout:
            cols: 2

            Label:
                text: "Workshops" 

            CheckBox:
                on_active: root.checkbox_click(self, self.active)
                size_hint_x: .20
                canvas.before:
                    Color:
                        rgba: 1, 1, 1, 1  # Set the color to white with full opacity
                    Line:
                        width: 2  # Thickness of the outline
                        rectangle: self.x, self.y, self.width, self.height
        GridLayout:
            cols: 2

            Label:
                text: "Social" 

            CheckBox:
                on_active: root.checkbox_click(self, self.active)
                size_hint_x: .20
                canvas.before:
                    Color:
                        rgba: 1, 1, 1, 1  # Set the color to white with full opacity
                    Line:
                        width: 2  # Thickness of the outline
                        rectangle: self.x, self.y, self.width, self.height

        GridLayout:
            cols: 2

            Label:
                text: "Clubs" 

            CheckBox:
                on_active: root.checkbox_click(self, self.active)
                size_hint_x: .20
                canvas.before:
                    Color:
                        rgba: 1, 1, 1, 1  # Set the color to white with full opacity
                    Line:
                        width: 2  # Thickness of the outline
                        rectangle: self.x, self.y, self.width, self.height

        GridLayout:
            cols: 2

            Label:
                text: "Academic/Professional" 

            CheckBox:
                on_active: root.checkbox_click(self, self.active)
                size_hint_x: .20
                canvas.before:
                    Color:
                        rgba: 1, 1, 1, 1  # Set the color to white with full opacity
                    Line:
                        width: 2  # Thickness of the outline
                        rectangle: self.x, self.y, self.width, self.height

        Button:
            text: "Filter Events"
            on_release: 
                root.manager.transition.direction = "down"
                root.go_back()

<Message>:
    name: "message"
    GridLayout:
        cols: 1
        size: root.width, root.height

        # Top row with back button, label, and popup button
        GridLayout:
            cols: 3
            size_hint_y: None
            height: "50dp"  # Adjusted to make the top row a bit taller for balance
            Button:
                size_hint_x: .2
                text: "<"
                on_release: 
                    root.manager.transition.direction = "right"
                    root.go_back()
            Label:
                text: "person's name"
            Button:
                size_hint_x: .2
                text: "!"
                on_release: Factory.CustomPopup().open()

        # Button below the top row
        Button:
            text: "Go Together"
            size_hint_y: .1
            height: "40dp"  # Adjust as needed
            on_release: Factory.GoTogetherPopup().open()

        # Larger ScrollView for dynamic label addition
        ScrollView:
            id: scroll_view
            size_hint_y: 0.7  # Occupies 70% of the height for more space
            BoxLayout:
                id: layout
                orientation: 'vertical'
                size_hint_y: None
                height: self.minimum_height  # Expands to fit added labels

        # Bottom row with TextInput and Send Button
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: "50dp"  # Adjusted for better visibility
            TextInput:
                id: message_input
                multiline: True
                hint_text: "Type your message..."
                size_hint_x: 0.8  # Takes up 80% of the width
            Button:
                text: "Send"
                size_hint_x: 0.2  # Takes up 20% of the width
                on_release:
                    root.addthelabel()

<GoTogetherPopup@Popup>:
    title: 'Do you want to go together?'
    auto_dismiss: False
    size_hint: 1, .2

    GridLayout:
        rows: 1
        row_force_default: True
        row_default_height: '46dp'
        col_force_default: True
        col_default_width: '195dp'
        Button:
            text: 'Yes'
            on_release: root.dismiss()
        Button:
            text: 'No'
            on_release: root.dismiss()

<CustomPopup@Popup>:
    title: 'Report User'
    auto_dismiss: False
    size_hint: 1, .2

    GridLayout:
        rows: 1
        row_force_default: True
        row_default_height: '46dp'
        col_force_default: True
        col_default_width: '195dp'
        Button:
            text: 'Yes'
            on_release: root.dismiss()
        Button:
            text: 'No'
            on_release: root.dismiss()


<Event>
    name: "event"
    GridLayout:
        cols: 1
        size: root.width, root.height

        Button:
            text: "Go Back"
            size_hint: 1, .2
            on_release: root.go_back()
        
        Label:
            id: event_label  # Assigning id to reference it in Python code
            text: "Event details will appear here."
            text_size: self.width, None
        
        Button:
            text: "Attendees"
            size_hint: 1, .2
            on_release: root.open_attendees_popup()

<AttendeesPopup>:
    title: 'Attendees'
    auto_dismiss: False
    size_hint: 1, .8

    BoxLayout:
        orientation: "vertical"
        padding: 10
        spacing: 10

        Button:
            size_hint_y: 0.4
            text: "Can't find anyone? Add yourself to the list!"
    


        

        
        


<Profile>:
    GridLayout:
        cols: 1
        Label:
            text: "This is the profile screen"
        Button:
            text: "Go to Main"
            on_release: 
                root.manager.transition.direction = "right"
                root.go_back()

            
            
            
            